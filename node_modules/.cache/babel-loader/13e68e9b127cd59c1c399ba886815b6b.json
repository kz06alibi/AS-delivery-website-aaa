{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nassi\\\\Desktop\\\\AS delivery\\\\src\\\\containers\\\\Profile.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { Button, Card, Dimmer, Divider, Form, Grid, Header, Image, Label, Loader, Menu, Message, Segment, Select, Table } from \"semantic-ui-react\";\nimport { countryListURL, addressListURL, addressCreateURL, addressUpdateURL, addressDeleteURL, userIDURL, paymentListURL } from \"../constants\";\nimport { authAxios } from \"../utils\";\nconst UPDATE_FORM = \"UPDATE_FORM\";\nconst CREATE_FORM = \"CREATE_FORM\";\n\nclass PaymentHistory extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      payments: []\n    };\n\n    this.handleFetchPayments = () => {\n      this.setState({\n        loading: true\n      });\n      authAxios.get(paymentListURL).then(res => {\n        this.setState({\n          loading: false,\n          payments: res.data\n        });\n      }).catch(err => {\n        this.setState({\n          error: err,\n          loading: false\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.handleFetchPayments();\n  }\n\n  render() {\n    const {\n      payments\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Table, {\n      celled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, \"ID\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, \"Amount\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, \"Date\"))), /*#__PURE__*/React.createElement(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, payments.map(p => {\n      return /*#__PURE__*/React.createElement(Table.Row, {\n        key: p.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      }, p.id), /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, \"\\u20B8\", p.amount), /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      }, new Date(p.timestamp).toUTCString()));\n    })));\n  }\n\n}\n\nclass AddressForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: null,\n      loading: false,\n      formData: {\n        address_type: \"\",\n        apartment_address: \"\",\n        country: \"\",\n        default: false,\n        id: \"\",\n        street_address: \"\",\n        user: 1\n      },\n      saving: false,\n      success: false\n    };\n\n    this.handleToggleDefault = () => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        default: !formData.default\n      };\n      this.setState({\n        formData: updatedFormdata\n      });\n    };\n\n    this.handleChange = e => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        [e.target.name]: e.target.value\n      };\n      this.setState({\n        formData: updatedFormdata\n      });\n    };\n\n    this.handleSelectChange = (e, {\n      name,\n      value\n    }) => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        [name]: value\n      };\n      this.setState({\n        formData: updatedFormdata\n      });\n    };\n\n    this.handleSubmit = e => {\n      this.setState({\n        saving: true\n      });\n      e.preventDefault();\n      const {\n        formType\n      } = this.props;\n\n      if (formType === UPDATE_FORM) {\n        this.handleUpdateAddress();\n      } else {\n        this.handleCreateAddress();\n      }\n    };\n\n    this.handleCreateAddress = () => {\n      const {\n        userID,\n        activeItem\n      } = this.props;\n      const {\n        formData\n      } = this.state;\n      authAxios.post(addressCreateURL, { ...formData,\n        user: userID,\n        address_type: activeItem === \"shippingAddress\" ? \"S\" : \"S\"\n      }).then(res => {\n        this.setState({\n          saving: false,\n          success: true,\n          formData: {\n            default: false\n          }\n        });\n        this.props.callback();\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleUpdateAddress = () => {\n      const {\n        userID,\n        activeItem\n      } = this.props;\n      const {\n        formData\n      } = this.state;\n      authAxios.put(addressUpdateURL(formData.id), { ...formData,\n        user: userID,\n        address_type: activeItem === \"shippingAddress\" ? \"S\" : \"S\"\n      }).then(res => {\n        this.setState({\n          saving: false,\n          success: true,\n          formData: {\n            default: false\n          }\n        });\n        this.props.callback();\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    const {\n      address,\n      formType\n    } = this.props;\n\n    if (formType === UPDATE_FORM) {\n      this.setState({\n        formData: address\n      });\n    }\n  }\n\n  render() {\n    const {\n      countries\n    } = this.props;\n    const {\n      error,\n      formData,\n      success,\n      saving\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      success: success,\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"street_address\",\n      placeholder: \"Enter your region\",\n      onChange: this.handleChange,\n      value: formData.street_address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"apartment_address\",\n      placeholder: \"Enter street and home \\u2116\",\n      onChange: this.handleChange,\n      value: formData.apartment_address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Field, {\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      loading: countries.length < 1,\n      fluid: true,\n      clearable: true,\n      search: true,\n      options: countries,\n      name: \"country\",\n      placeholder: \"Country\",\n      onChange: this.handleSelectChange,\n      value: formData.country,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Form.Checkbox, {\n      name: \"default\",\n      label: \"Make this the default address?\",\n      onChange: this.handleToggleDefault,\n      checked: formData.default,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }\n    }), success && /*#__PURE__*/React.createElement(Message, {\n      success: true,\n      header: \"Success!\",\n      content: \"Your address was saved\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }\n    }), error && /*#__PURE__*/React.createElement(Message, {\n      error: true,\n      header: \"There was an error\",\n      content: JSON.stringify(error),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Form.Button, {\n      disabled: saving,\n      loading: saving,\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }\n    }, \"Save\"));\n  }\n\n}\n\nclass Profile extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeItem: \"shippingAddress\",\n      addresses: [],\n      countries: [],\n      userID: null,\n      selectedAddress: null\n    };\n\n    this.handleItemClick = name => {\n      this.setState({\n        activeItem: name\n      }, () => {\n        this.handleFetchAddresses();\n      });\n    };\n\n    this.handleGetActiveItem = () => {\n      const {\n        activeItem\n      } = this.state;\n\n      if (activeItem === \"shippingAddress\") {\n        return \"Shipping Address\";\n      }\n\n      return \"Payment History\";\n    };\n\n    this.handleFormatCountries = countries => {\n      const keys = Object.keys(countries);\n      return keys.map(k => {\n        return {\n          key: k,\n          text: countries[k],\n          value: k\n        };\n      });\n    };\n\n    this.handleDeleteAddress = addressID => {\n      authAxios.delete(addressDeleteURL(addressID)).then(res => {\n        this.handleCallback();\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleSelectAddress = address => {\n      this.setState({\n        selectedAddress: address\n      });\n    };\n\n    this.handleFetchUserID = () => {\n      authAxios.get(userIDURL).then(res => {\n        this.setState({\n          userID: res.data.userID\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleFetchCountries = () => {\n      authAxios.get(countryListURL).then(res => {\n        this.setState({\n          countries: this.handleFormatCountries(res.data)\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleFetchAddresses = () => {\n      this.setState({\n        loading: true\n      });\n      const {\n        activeItem\n      } = this.state;\n      authAxios.get(addressListURL(activeItem === \"shippingAddress\" ? \"S\" : \"S\")).then(res => {\n        this.setState({\n          addresses: res.data,\n          loading: false\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleCallback = () => {\n      this.handleFetchAddresses();\n      this.setState({\n        selectedAddress: null\n      });\n    };\n\n    this.renderAddresses = () => {\n      const {\n        activeItem,\n        addresses,\n        countries,\n        selectedAddress,\n        userID\n      } = this.state;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Card.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 9\n        }\n      }, addresses.map(a => {\n        return /*#__PURE__*/React.createElement(Card, {\n          key: a.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Card.Content, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 17\n          }\n        }, a.default && /*#__PURE__*/React.createElement(Label, {\n          as: \"a\",\n          color: \"blue\",\n          ribbon: \"right\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 21\n          }\n        }, \"Default\"), /*#__PURE__*/React.createElement(Card.Header, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 19\n          }\n        }, a.street_address, \", \", a.apartment_address), /*#__PURE__*/React.createElement(Card.Meta, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 19\n          }\n        }, a.country)), /*#__PURE__*/React.createElement(Card.Content, {\n          extra: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          color: \"yellow\",\n          onClick: () => this.handleSelectAddress(a),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 19\n          }\n        }, \"Update\"), /*#__PURE__*/React.createElement(Button, {\n          color: \"red\",\n          onClick: () => this.handleDeleteAddress(a.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 19\n          }\n        }, \"Delete\")));\n      })), addresses.length > 0 ? /*#__PURE__*/React.createElement(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 33\n        }\n      }) : null, selectedAddress === null ? /*#__PURE__*/React.createElement(AddressForm, {\n        activeItem: activeItem,\n        countries: countries,\n        formType: CREATE_FORM,\n        userID: userID,\n        callback: this.handleCallback,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }\n      }) : null, selectedAddress && /*#__PURE__*/React.createElement(AddressForm, {\n        activeItem: activeItem,\n        userID: userID,\n        countries: countries,\n        address: selectedAddress,\n        formType: UPDATE_FORM,\n        callback: this.handleCallback,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.handleFetchAddresses();\n    this.handleFetchCountries();\n    this.handleFetchUserID();\n  }\n\n  render() {\n    const {\n      activeItem,\n      error,\n      loading\n    } = this.state;\n    const {\n      isAuthenticated\n    } = this.props;\n\n    if (!isAuthenticated) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      columns: 2,\n      divided: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      columns: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 11\n      }\n    }, error && /*#__PURE__*/React.createElement(Message, {\n      error: true,\n      header: \"There was an error\",\n      content: JSON.stringify(error),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 15\n      }\n    }), loading && /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Dimmer, {\n      active: true,\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 19\n      }\n    }, \"Loading\")), /*#__PURE__*/React.createElement(Image, {\n      src: \"/images/wireframe/short-paragraph.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      pointing: true,\n      vertical: true,\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Menu.Item, {\n      name: \"Shipping Address\",\n      active: activeItem === \"shippingAddress\",\n      onClick: () => this.handleItemClick(\"shippingAddress\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Menu.Item, {\n      name: \"Payment history\",\n      active: activeItem === \"paymentHistory\",\n      onClick: () => this.handleItemClick(\"paymentHistory\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 13\n      }\n    }, this.handleGetActiveItem()), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 13\n      }\n    }), activeItem === \"paymentHistory\" ? /*#__PURE__*/React.createElement(PaymentHistory, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 15\n      }\n    }) : this.renderAddresses())));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nexport default connect(mapStateToProps)(Profile);","map":{"version":3,"sources":["C:/Users/nassi/Desktop/AS delivery/src/containers/Profile.js"],"names":["React","connect","Redirect","Button","Card","Dimmer","Divider","Form","Grid","Header","Image","Label","Loader","Menu","Message","Segment","Select","Table","countryListURL","addressListURL","addressCreateURL","addressUpdateURL","addressDeleteURL","userIDURL","paymentListURL","authAxios","UPDATE_FORM","CREATE_FORM","PaymentHistory","Component","state","payments","handleFetchPayments","setState","loading","get","then","res","data","catch","err","error","componentDidMount","render","map","p","id","amount","Date","timestamp","toUTCString","AddressForm","formData","address_type","apartment_address","country","default","street_address","user","saving","success","handleToggleDefault","updatedFormdata","handleChange","e","target","name","value","handleSelectChange","handleSubmit","preventDefault","formType","props","handleUpdateAddress","handleCreateAddress","userID","activeItem","post","callback","put","address","countries","length","JSON","stringify","Profile","addresses","selectedAddress","handleItemClick","handleFetchAddresses","handleGetActiveItem","handleFormatCountries","keys","Object","k","key","text","handleDeleteAddress","addressID","delete","handleCallback","handleSelectAddress","handleFetchUserID","handleFetchCountries","renderAddresses","a","isAuthenticated","mapStateToProps","auth","token"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,MAHF,EAIEC,OAJF,EAKEC,IALF,EAMEC,IANF,EAOEC,MAPF,EAQEC,KARF,EASEC,KATF,EAUEC,MAVF,EAWEC,IAXF,EAYEC,OAZF,EAaEC,OAbF,EAcEC,MAdF,EAeEC,KAfF,QAgBO,mBAhBP;AAiBA,SACEC,cADF,EAEEC,cAFF,EAGEC,gBAHF,EAIEC,gBAJF,EAKEC,gBALF,EAMEC,SANF,EAOEC,cAPF,QAQO,cARP;AASA,SAASC,SAAT,QAA0B,UAA1B;AAEA,MAAMC,WAAW,GAAG,aAApB;AACA,MAAMC,WAAW,GAAG,aAApB;;AAEA,MAAMC,cAAN,SAA6B5B,KAAK,CAAC6B,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAC3CC,KAD2C,GACnC;AACNC,MAAAA,QAAQ,EAAE;AADJ,KADmC;;AAAA,SAS3CC,mBAT2C,GASrB,MAAM;AAC1B,WAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACAT,MAAAA,SAAS,CACNU,GADH,CACOX,cADP,EAEGY,IAFH,CAEQC,GAAG,IAAI;AACX,aAAKJ,QAAL,CAAc;AACZC,UAAAA,OAAO,EAAE,KADG;AAEZH,UAAAA,QAAQ,EAAEM,GAAG,CAACC;AAFF,SAAd;AAID,OAPH,EAQGC,KARH,CAQSC,GAAG,IAAI;AACZ,aAAKP,QAAL,CAAc;AAAEQ,UAAAA,KAAK,EAAED,GAAT;AAAcN,UAAAA,OAAO,EAAE;AAAvB,SAAd;AACD,OAVH;AAWD,KAtB0C;AAAA;;AAK3CQ,EAAAA,iBAAiB,GAAG;AAClB,SAAKV,mBAAL;AACD;;AAiBDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEZ,MAAAA;AAAF,QAAe,KAAKD,KAA1B;AACA,wBACE,oBAAC,KAAD;AAAO,MAAA,MAAM,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,CADF,CADF,eAQE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,QAAQ,CAACa,GAAT,CAAaC,CAAC,IAAI;AACjB,0BACE,oBAAC,KAAD,CAAO,GAAP;AAAW,QAAA,GAAG,EAAEA,CAAC,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAaD,CAAC,CAACC,EAAf,CADF,eAEE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcD,CAAC,CAACE,MAAhB,CAFF,eAGE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAa,IAAIC,IAAJ,CAASH,CAAC,CAACI,SAAX,EAAsBC,WAAtB,EAAb,CAHF,CADF;AAOD,KARA,CADH,CARF,CADF;AAsBD;;AAhD0C;;AAmD7C,MAAMC,WAAN,SAA0BnD,KAAK,CAAC6B,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACxCC,KADwC,GAChC;AACNW,MAAAA,KAAK,EAAE,IADD;AAENP,MAAAA,OAAO,EAAE,KAFH;AAGNkB,MAAAA,QAAQ,EAAE;AACRC,QAAAA,YAAY,EAAE,EADN;AAERC,QAAAA,iBAAiB,EAAE,EAFX;AAGRC,QAAAA,OAAO,EAAE,EAHD;AAIRC,QAAAA,OAAO,EAAE,KAJD;AAKRV,QAAAA,EAAE,EAAE,EALI;AAMRW,QAAAA,cAAc,EAAE,EANR;AAORC,QAAAA,IAAI,EAAE;AAPE,OAHJ;AAYNC,MAAAA,MAAM,EAAE,KAZF;AAaNC,MAAAA,OAAO,EAAE;AAbH,KADgC;;AAAA,SAwBxCC,mBAxBwC,GAwBlB,MAAM;AAC1B,YAAM;AAAET,QAAAA;AAAF,UAAe,KAAKtB,KAA1B;AACA,YAAMgC,eAAe,GAAG,EACtB,GAAGV,QADmB;AAEtBI,QAAAA,OAAO,EAAE,CAACJ,QAAQ,CAACI;AAFG,OAAxB;AAIA,WAAKvB,QAAL,CAAc;AACZmB,QAAAA,QAAQ,EAAEU;AADE,OAAd;AAGD,KAjCuC;;AAAA,SAmCxCC,YAnCwC,GAmCzBC,CAAC,IAAI;AAClB,YAAM;AAAEZ,QAAAA;AAAF,UAAe,KAAKtB,KAA1B;AACA,YAAMgC,eAAe,GAAG,EACtB,GAAGV,QADmB;AAEtB,SAACY,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFJ,OAAxB;AAIA,WAAKlC,QAAL,CAAc;AACZmB,QAAAA,QAAQ,EAAEU;AADE,OAAd;AAGD,KA5CuC;;AAAA,SA8CxCM,kBA9CwC,GA8CnB,CAACJ,CAAD,EAAI;AAAEE,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAJ,KAAwB;AAC3C,YAAM;AAAEf,QAAAA;AAAF,UAAe,KAAKtB,KAA1B;AACA,YAAMgC,eAAe,GAAG,EACtB,GAAGV,QADmB;AAEtB,SAACc,IAAD,GAAQC;AAFc,OAAxB;AAIA,WAAKlC,QAAL,CAAc;AACZmB,QAAAA,QAAQ,EAAEU;AADE,OAAd;AAGD,KAvDuC;;AAAA,SAyDxCO,YAzDwC,GAyDzBL,CAAC,IAAI;AAClB,WAAK/B,QAAL,CAAc;AAAE0B,QAAAA,MAAM,EAAE;AAAV,OAAd;AACAK,MAAAA,CAAC,CAACM,cAAF;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAe,KAAKC,KAA1B;;AACA,UAAID,QAAQ,KAAK7C,WAAjB,EAA8B;AAC5B,aAAK+C,mBAAL;AACD,OAFD,MAEO;AACL,aAAKC,mBAAL;AACD;AACF,KAlEuC;;AAAA,SAoExCA,mBApEwC,GAoElB,MAAM;AAC1B,YAAM;AAAEC,QAAAA,MAAF;AAAUC,QAAAA;AAAV,UAAyB,KAAKJ,KAApC;AACA,YAAM;AAAEpB,QAAAA;AAAF,UAAe,KAAKtB,KAA1B;AACAL,MAAAA,SAAS,CACNoD,IADH,CACQzD,gBADR,EAC0B,EACtB,GAAGgC,QADmB;AAEtBM,QAAAA,IAAI,EAAEiB,MAFgB;AAGtBtB,QAAAA,YAAY,EAAEuB,UAAU,KAAK,iBAAf,GAAmC,GAAnC,GAAyC;AAHjC,OAD1B,EAMGxC,IANH,CAMQC,GAAG,IAAI;AACX,aAAKJ,QAAL,CAAc;AACZ0B,UAAAA,MAAM,EAAE,KADI;AAEZC,UAAAA,OAAO,EAAE,IAFG;AAGZR,UAAAA,QAAQ,EAAE;AAAEI,YAAAA,OAAO,EAAE;AAAX;AAHE,SAAd;AAKA,aAAKgB,KAAL,CAAWM,QAAX;AACD,OAbH,EAcGvC,KAdH,CAcSC,GAAG,IAAI;AACZ,aAAKP,QAAL,CAAc;AAAEQ,UAAAA,KAAK,EAAED;AAAT,SAAd;AACD,OAhBH;AAiBD,KAxFuC;;AAAA,SA0FxCiC,mBA1FwC,GA0FlB,MAAM;AAC1B,YAAM;AAAEE,QAAAA,MAAF;AAAUC,QAAAA;AAAV,UAAyB,KAAKJ,KAApC;AACA,YAAM;AAAEpB,QAAAA;AAAF,UAAe,KAAKtB,KAA1B;AACAL,MAAAA,SAAS,CACNsD,GADH,CACO1D,gBAAgB,CAAC+B,QAAQ,CAACN,EAAV,CADvB,EACsC,EAClC,GAAGM,QAD+B;AAElCM,QAAAA,IAAI,EAAEiB,MAF4B;AAGlCtB,QAAAA,YAAY,EAAEuB,UAAU,KAAK,iBAAf,GAAmC,GAAnC,GAAyC;AAHrB,OADtC,EAMGxC,IANH,CAMQC,GAAG,IAAI;AACX,aAAKJ,QAAL,CAAc;AACZ0B,UAAAA,MAAM,EAAE,KADI;AAEZC,UAAAA,OAAO,EAAE,IAFG;AAGZR,UAAAA,QAAQ,EAAE;AAAEI,YAAAA,OAAO,EAAE;AAAX;AAHE,SAAd;AAKA,aAAKgB,KAAL,CAAWM,QAAX;AACD,OAbH,EAcGvC,KAdH,CAcSC,GAAG,IAAI;AACZ,aAAKP,QAAL,CAAc;AAAEQ,UAAAA,KAAK,EAAED;AAAT,SAAd;AACD,OAhBH;AAiBD,KA9GuC;AAAA;;AAiBxCE,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEsC,MAAAA,OAAF;AAAWT,MAAAA;AAAX,QAAwB,KAAKC,KAAnC;;AACA,QAAID,QAAQ,KAAK7C,WAAjB,EAA8B;AAC5B,WAAKO,QAAL,CAAc;AAAEmB,QAAAA,QAAQ,EAAE4B;AAAZ,OAAd;AACD;AACF;;AA0FDrC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEsC,MAAAA;AAAF,QAAgB,KAAKT,KAA3B;AACA,UAAM;AAAE/B,MAAAA,KAAF;AAASW,MAAAA,QAAT;AAAmBQ,MAAAA,OAAnB;AAA4BD,MAAAA;AAA5B,QAAuC,KAAK7B,KAAlD;AACA,wBACE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKuC,YAArB;AAAmC,MAAA,OAAO,EAAET,OAA5C;AAAqD,MAAA,KAAK,EAAEnB,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,IAAI,EAAC,gBAFP;AAGE,MAAA,WAAW,EAAC,mBAHd;AAIE,MAAA,QAAQ,EAAE,KAAKsB,YAJjB;AAKE,MAAA,KAAK,EAAEX,QAAQ,CAACK,cALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE,oBAAC,IAAD,CAAM,KAAN;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,IAAI,EAAC,mBAFP;AAGE,MAAA,WAAW,EAAC,8BAHd;AAIE,MAAA,QAAQ,EAAE,KAAKM,YAJjB;AAKE,MAAA,KAAK,EAAEX,QAAQ,CAACE,iBALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,eAeE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,QAAQ,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAE2B,SAAS,CAACC,MAAV,GAAmB,CAD9B;AAEE,MAAA,KAAK,MAFP;AAGE,MAAA,SAAS,MAHX;AAIE,MAAA,MAAM,MAJR;AAKE,MAAA,OAAO,EAAED,SALX;AAME,MAAA,IAAI,EAAC,SANP;AAOE,MAAA,WAAW,EAAC,SAPd;AAQE,MAAA,QAAQ,EAAE,KAAKb,kBARjB;AASE,MAAA,KAAK,EAAEhB,QAAQ,CAACG,OATlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAfF,eA4BE,oBAAC,IAAD,CAAM,QAAN;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,KAAK,EAAC,gCAFR;AAGE,MAAA,QAAQ,EAAE,KAAKM,mBAHjB;AAIE,MAAA,OAAO,EAAET,QAAQ,CAACI,OAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5BF,EAkCGI,OAAO,iBACN,oBAAC,OAAD;AAAS,MAAA,OAAO,MAAhB;AAAiB,MAAA,MAAM,EAAC,UAAxB;AAAmC,MAAA,OAAO,EAAC,wBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnCJ,EAqCGnB,KAAK,iBACJ,oBAAC,OAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,MAAM,EAAC,oBAFT;AAGE,MAAA,OAAO,EAAE0C,IAAI,CAACC,SAAL,CAAe3C,KAAf,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtCJ,eA4CE,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,QAAQ,EAAEkB,MAAvB;AAA+B,MAAA,OAAO,EAAEA,MAAxC;AAAgD,MAAA,OAAO,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5CF,CADF;AAkDD;;AArKuC;;AAwK1C,MAAM0B,OAAN,SAAsBrF,KAAK,CAAC6B,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCC,KADoC,GAC5B;AACN8C,MAAAA,UAAU,EAAE,iBADN;AAENU,MAAAA,SAAS,EAAE,EAFL;AAGNL,MAAAA,SAAS,EAAE,EAHL;AAINN,MAAAA,MAAM,EAAE,IAJF;AAKNY,MAAAA,eAAe,EAAE;AALX,KAD4B;;AAAA,SAepCC,eAfoC,GAelBtB,IAAI,IAAI;AACxB,WAAKjC,QAAL,CAAc;AAAE2C,QAAAA,UAAU,EAAEV;AAAd,OAAd,EAAoC,MAAM;AACxC,aAAKuB,oBAAL;AACD,OAFD;AAGD,KAnBmC;;AAAA,SAqBpCC,mBArBoC,GAqBd,MAAM;AAC1B,YAAM;AAAEd,QAAAA;AAAF,UAAiB,KAAK9C,KAA5B;;AACA,UAAI8C,UAAU,KAAK,iBAAnB,EAAsC;AACpC,eAAO,kBAAP;AACD;;AACD,aAAO,iBAAP;AACD,KA3BmC;;AAAA,SA6BpCe,qBA7BoC,GA6BZV,SAAS,IAAI;AACnC,YAAMW,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYX,SAAZ,CAAb;AACA,aAAOW,IAAI,CAAChD,GAAL,CAASkD,CAAC,IAAI;AACnB,eAAO;AACLC,UAAAA,GAAG,EAAED,CADA;AAELE,UAAAA,IAAI,EAAEf,SAAS,CAACa,CAAD,CAFV;AAGL3B,UAAAA,KAAK,EAAE2B;AAHF,SAAP;AAKD,OANM,CAAP;AAOD,KAtCmC;;AAAA,SAwCpCG,mBAxCoC,GAwCdC,SAAS,IAAI;AACjCzE,MAAAA,SAAS,CACN0E,MADH,CACU7E,gBAAgB,CAAC4E,SAAD,CAD1B,EAEG9D,IAFH,CAEQC,GAAG,IAAI;AACX,aAAK+D,cAAL;AACD,OAJH,EAKG7D,KALH,CAKSC,GAAG,IAAI;AACZ,aAAKP,QAAL,CAAc;AAAEQ,UAAAA,KAAK,EAAED;AAAT,SAAd;AACD,OAPH;AAQD,KAjDmC;;AAAA,SAmDpC6D,mBAnDoC,GAmDdrB,OAAO,IAAI;AAC/B,WAAK/C,QAAL,CAAc;AAAEsD,QAAAA,eAAe,EAAEP;AAAnB,OAAd;AACD,KArDmC;;AAAA,SAuDpCsB,iBAvDoC,GAuDhB,MAAM;AACxB7E,MAAAA,SAAS,CACNU,GADH,CACOZ,SADP,EAEGa,IAFH,CAEQC,GAAG,IAAI;AACX,aAAKJ,QAAL,CAAc;AAAE0C,UAAAA,MAAM,EAAEtC,GAAG,CAACC,IAAJ,CAASqC;AAAnB,SAAd;AACD,OAJH,EAKGpC,KALH,CAKSC,GAAG,IAAI;AACZ,aAAKP,QAAL,CAAc;AAAEQ,UAAAA,KAAK,EAAED;AAAT,SAAd;AACD,OAPH;AAQD,KAhEmC;;AAAA,SAkEpC+D,oBAlEoC,GAkEb,MAAM;AAC3B9E,MAAAA,SAAS,CACNU,GADH,CACOjB,cADP,EAEGkB,IAFH,CAEQC,GAAG,IAAI;AACX,aAAKJ,QAAL,CAAc;AAAEgD,UAAAA,SAAS,EAAE,KAAKU,qBAAL,CAA2BtD,GAAG,CAACC,IAA/B;AAAb,SAAd;AACD,OAJH,EAKGC,KALH,CAKSC,GAAG,IAAI;AACZ,aAAKP,QAAL,CAAc;AAAEQ,UAAAA,KAAK,EAAED;AAAT,SAAd;AACD,OAPH;AAQD,KA3EmC;;AAAA,SA6EpCiD,oBA7EoC,GA6Eb,MAAM;AAC3B,WAAKxD,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,YAAM;AAAE0C,QAAAA;AAAF,UAAiB,KAAK9C,KAA5B;AACAL,MAAAA,SAAS,CACNU,GADH,CACOhB,cAAc,CAACyD,UAAU,KAAK,iBAAf,GAAmC,GAAnC,GAAyC,GAA1C,CADrB,EAEGxC,IAFH,CAEQC,GAAG,IAAI;AACX,aAAKJ,QAAL,CAAc;AAAEqD,UAAAA,SAAS,EAAEjD,GAAG,CAACC,IAAjB;AAAuBJ,UAAAA,OAAO,EAAE;AAAhC,SAAd;AACD,OAJH,EAKGK,KALH,CAKSC,GAAG,IAAI;AACZ,aAAKP,QAAL,CAAc;AAAEQ,UAAAA,KAAK,EAAED;AAAT,SAAd;AACD,OAPH;AAQD,KAxFmC;;AAAA,SA0FpC4D,cA1FoC,GA0FnB,MAAM;AACrB,WAAKX,oBAAL;AACA,WAAKxD,QAAL,CAAc;AAAEsD,QAAAA,eAAe,EAAE;AAAnB,OAAd;AACD,KA7FmC;;AAAA,SA+FpCiB,eA/FoC,GA+FlB,MAAM;AACtB,YAAM;AACJ5B,QAAAA,UADI;AAEJU,QAAAA,SAFI;AAGJL,QAAAA,SAHI;AAIJM,QAAAA,eAJI;AAKJZ,QAAAA;AALI,UAMF,KAAK7C,KANT;AAOA,0BACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGwD,SAAS,CAAC1C,GAAV,CAAc6D,CAAC,IAAI;AAClB,4BACE,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEA,CAAC,CAAC3D,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG2D,CAAC,CAACjD,OAAF,iBACC,oBAAC,KAAD;AAAO,UAAA,EAAE,EAAC,GAAV;AAAc,UAAA,KAAK,EAAC,MAApB;AAA2B,UAAA,MAAM,EAAC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,eAME,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGiD,CAAC,CAAChD,cADL,QACuBgD,CAAC,CAACnD,iBADzB,CANF,eASE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAYmD,CAAC,CAAClD,OAAd,CATF,CADF,eAYE,oBAAC,IAAD,CAAM,OAAN;AAAc,UAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,MAAD;AACE,UAAA,KAAK,EAAC,QADR;AAEE,UAAA,OAAO,EAAE,MAAM,KAAK8C,mBAAL,CAAyBI,CAAzB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAOE,oBAAC,MAAD;AACE,UAAA,KAAK,EAAC,KADR;AAEE,UAAA,OAAO,EAAE,MAAM,KAAKR,mBAAL,CAAyBQ,CAAC,CAAC3D,EAA3B,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,CAZF,CADF;AA6BD,OA9BA,CADH,CADF,EAkCGwC,SAAS,CAACJ,MAAV,GAAmB,CAAnB,gBAAuB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvB,GAAqC,IAlCxC,EAmCGK,eAAe,KAAK,IAApB,gBACC,oBAAC,WAAD;AACE,QAAA,UAAU,EAAEX,UADd;AAEE,QAAA,SAAS,EAAEK,SAFb;AAGE,QAAA,QAAQ,EAAEtD,WAHZ;AAIE,QAAA,MAAM,EAAEgD,MAJV;AAKE,QAAA,QAAQ,EAAE,KAAKyB,cALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,GAQG,IA3CN,EA4CGb,eAAe,iBACd,oBAAC,WAAD;AACE,QAAA,UAAU,EAAEX,UADd;AAEE,QAAA,MAAM,EAAED,MAFV;AAGE,QAAA,SAAS,EAAEM,SAHb;AAIE,QAAA,OAAO,EAAEM,eAJX;AAKE,QAAA,QAAQ,EAAE7D,WALZ;AAME,QAAA,QAAQ,EAAE,KAAK0E,cANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA7CJ,CADF;AAyDD,KAhKmC;AAAA;;AASpC1D,EAAAA,iBAAiB,GAAG;AAClB,SAAK+C,oBAAL;AACA,SAAKc,oBAAL;AACA,SAAKD,iBAAL;AACD;;AAqJD3D,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEiC,MAAAA,UAAF;AAAcnC,MAAAA,KAAd;AAAqBP,MAAAA;AAArB,QAAiC,KAAKJ,KAA5C;AACA,UAAM;AAAE4E,MAAAA;AAAF,QAAsB,KAAKlC,KAAjC;;AACA,QAAI,CAACkC,eAAL,EAAsB;AACpB,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,wBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAA4B,MAAA,OAAO,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,OAAO,EAAE,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGjE,KAAK,iBACJ,oBAAC,OAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,MAAM,EAAC,oBAFT;AAGE,MAAA,OAAO,EAAE0C,IAAI,CAACC,SAAL,CAAe3C,KAAf,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAQGP,OAAO,iBACN,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,MAAM,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,eAIE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,uCAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CATJ,CADF,CADF,eAoBE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,QAAQ,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,IAAN;AACE,MAAA,IAAI,EAAC,kBADP;AAEE,MAAA,MAAM,EAAE0C,UAAU,KAAK,iBAFzB;AAGE,MAAA,OAAO,EAAE,MAAM,KAAKY,eAAL,CAAqB,iBAArB,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAME,oBAAC,IAAD,CAAM,IAAN;AACE,MAAA,IAAI,EAAC,iBADP;AAEE,MAAA,MAAM,EAAEZ,UAAU,KAAK,gBAFzB;AAGE,MAAA,OAAO,EAAE,MAAM,KAAKY,eAAL,CAAqB,gBAArB,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF,CADF,eAeE,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAS,KAAKE,mBAAL,EAAT,CADF,eAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGGd,UAAU,KAAK,gBAAf,gBACC,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAGC,KAAK4B,eAAL,EANJ,CAfF,CApBF,CADF;AAgDD;;AAxNmC;;AA2NtC,MAAMG,eAAe,GAAG7E,KAAK,IAAI;AAC/B,SAAO;AACL4E,IAAAA,eAAe,EAAE5E,KAAK,CAAC8E,IAAN,CAAWC,KAAX,KAAqB;AADjC,GAAP;AAGD,CAJD;;AAMA,eAAe5G,OAAO,CAAC0G,eAAD,CAAP,CAAyBtB,OAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Button,\n  Card,\n  Dimmer,\n  Divider,\n  Form,\n  Grid,\n  Header,\n  Image,\n  Label,\n  Loader,\n  Menu,\n  Message,\n  Segment,\n  Select,\n  Table\n} from \"semantic-ui-react\";\nimport {\n  countryListURL,\n  addressListURL,\n  addressCreateURL,\n  addressUpdateURL,\n  addressDeleteURL,\n  userIDURL,\n  paymentListURL\n} from \"../constants\";\nimport { authAxios } from \"../utils\";\n\nconst UPDATE_FORM = \"UPDATE_FORM\";\nconst CREATE_FORM = \"CREATE_FORM\";\n\nclass PaymentHistory extends React.Component {\n  state = {\n    payments: []\n  };\n\n  componentDidMount() {\n    this.handleFetchPayments();\n  }\n\n  handleFetchPayments = () => {\n    this.setState({ loading: true });\n    authAxios\n      .get(paymentListURL)\n      .then(res => {\n        this.setState({\n          loading: false,\n          payments: res.data\n        });\n      })\n      .catch(err => {\n        this.setState({ error: err, loading: false });\n      });\n  };\n\n  render() {\n    const { payments } = this.state;\n    return (\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>ID</Table.HeaderCell>\n            <Table.HeaderCell>Amount</Table.HeaderCell>\n            <Table.HeaderCell>Date</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {payments.map(p => {\n            return (\n              <Table.Row key={p.id}>\n                <Table.Cell>{p.id}</Table.Cell>\n                <Table.Cell>₸{p.amount}</Table.Cell>\n                <Table.Cell>{new Date(p.timestamp).toUTCString()}</Table.Cell>\n              </Table.Row>\n            );\n          })}\n        </Table.Body>\n      </Table>\n    );\n  }\n}\n\nclass AddressForm extends React.Component {\n  state = {\n    error: null,\n    loading: false,\n    formData: {\n      address_type: \"\",\n      apartment_address: \"\",\n      country: \"\",\n      default: false,\n      id: \"\",\n      street_address: \"\",\n      user: 1\n    },\n    saving: false,\n    success: false\n  };\n\n  componentDidMount() {\n    const { address, formType } = this.props;\n    if (formType === UPDATE_FORM) {\n      this.setState({ formData: address });\n    }\n  }\n\n  handleToggleDefault = () => {\n    const { formData } = this.state;\n    const updatedFormdata = {\n      ...formData,\n      default: !formData.default\n    };\n    this.setState({\n      formData: updatedFormdata\n    });\n  };\n\n  handleChange = e => {\n    const { formData } = this.state;\n    const updatedFormdata = {\n      ...formData,\n      [e.target.name]: e.target.value\n    };\n    this.setState({\n      formData: updatedFormdata\n    });\n  };\n\n  handleSelectChange = (e, { name, value }) => {\n    const { formData } = this.state;\n    const updatedFormdata = {\n      ...formData,\n      [name]: value\n    };\n    this.setState({\n      formData: updatedFormdata\n    });\n  };\n\n  handleSubmit = e => {\n    this.setState({ saving: true });\n    e.preventDefault();\n    const { formType } = this.props;\n    if (formType === UPDATE_FORM) {\n      this.handleUpdateAddress();\n    } else {\n      this.handleCreateAddress();\n    }\n  };\n\n  handleCreateAddress = () => {\n    const { userID, activeItem } = this.props;\n    const { formData } = this.state;\n    authAxios\n      .post(addressCreateURL, {\n        ...formData,\n        user: userID,\n        address_type: activeItem === \"shippingAddress\" ? \"S\" : \"S\"\n      })\n      .then(res => {\n        this.setState({\n          saving: false,\n          success: true,\n          formData: { default: false }\n        });\n        this.props.callback();\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleUpdateAddress = () => {\n    const { userID, activeItem } = this.props;\n    const { formData } = this.state;\n    authAxios\n      .put(addressUpdateURL(formData.id), {\n        ...formData,\n        user: userID,\n        address_type: activeItem === \"shippingAddress\" ? \"S\" : \"S\"\n      })\n      .then(res => {\n        this.setState({\n          saving: false,\n          success: true,\n          formData: { default: false }\n        });\n        this.props.callback();\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  render() {\n    const { countries } = this.props;\n    const { error, formData, success, saving } = this.state;\n    return (\n      <Form onSubmit={this.handleSubmit} success={success} error={error}>\n        <Form.Input\n          required\n          name=\"street_address\"\n          placeholder=\"Enter your region\"\n          onChange={this.handleChange}\n          value={formData.street_address}\n        />\n        <Form.Input\n          required\n          name=\"apartment_address\"\n          placeholder=\"Enter street and home №\"\n          onChange={this.handleChange}\n          value={formData.apartment_address}\n        />\n        <Form.Field required>\n          <Select\n            loading={countries.length < 1}\n            fluid\n            clearable\n            search\n            options={countries}\n            name=\"country\"\n            placeholder=\"Country\"\n            onChange={this.handleSelectChange}\n            value={formData.country}\n          />\n        </Form.Field>\n        <Form.Checkbox\n          name=\"default\"\n          label=\"Make this the default address?\"\n          onChange={this.handleToggleDefault}\n          checked={formData.default}\n        />\n        {success && (\n          <Message success header=\"Success!\" content=\"Your address was saved\" />\n        )}\n        {error && (\n          <Message\n            error\n            header=\"There was an error\"\n            content={JSON.stringify(error)}\n          />\n        )}\n        <Form.Button disabled={saving} loading={saving} primary>\n          Save\n        </Form.Button>\n      </Form>\n    );\n  }\n}\n\nclass Profile extends React.Component {\n  state = {\n    activeItem: \"shippingAddress\",\n    addresses: [],\n    countries: [],\n    userID: null,\n    selectedAddress: null\n  };\n\n  componentDidMount() {\n    this.handleFetchAddresses();\n    this.handleFetchCountries();\n    this.handleFetchUserID();\n  }\n\n  handleItemClick = name => {\n    this.setState({ activeItem: name }, () => {\n      this.handleFetchAddresses();\n    });\n  };\n\n  handleGetActiveItem = () => {\n    const { activeItem } = this.state;\n    if (activeItem === \"shippingAddress\") {\n      return \"Shipping Address\";\n    }\n    return \"Payment History\";\n  };\n\n  handleFormatCountries = countries => {\n    const keys = Object.keys(countries);\n    return keys.map(k => {\n      return {\n        key: k,\n        text: countries[k],\n        value: k\n      };\n    });\n  };\n\n  handleDeleteAddress = addressID => {\n    authAxios\n      .delete(addressDeleteURL(addressID))\n      .then(res => {\n        this.handleCallback();\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleSelectAddress = address => {\n    this.setState({ selectedAddress: address });\n  };\n\n  handleFetchUserID = () => {\n    authAxios\n      .get(userIDURL)\n      .then(res => {\n        this.setState({ userID: res.data.userID });\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleFetchCountries = () => {\n    authAxios\n      .get(countryListURL)\n      .then(res => {\n        this.setState({ countries: this.handleFormatCountries(res.data) });\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleFetchAddresses = () => {\n    this.setState({ loading: true });\n    const { activeItem } = this.state;\n    authAxios\n      .get(addressListURL(activeItem === \"shippingAddress\" ? \"S\" : \"S\"))\n      .then(res => {\n        this.setState({ addresses: res.data, loading: false });\n      })\n      .catch(err => {\n        this.setState({ error: err });\n      });\n  };\n\n  handleCallback = () => {\n    this.handleFetchAddresses();\n    this.setState({ selectedAddress: null });\n  };\n\n  renderAddresses = () => {\n    const {\n      activeItem,\n      addresses,\n      countries,\n      selectedAddress,\n      userID\n    } = this.state;\n    return (\n      <React.Fragment>\n        <Card.Group>\n          {addresses.map(a => {\n            return (\n              <Card key={a.id}>\n                <Card.Content>\n                  {a.default && (\n                    <Label as=\"a\" color=\"blue\" ribbon=\"right\">\n                      Default\n                    </Label>\n                  )}\n                  <Card.Header>\n                    {a.street_address}, {a.apartment_address}\n                  </Card.Header>\n                  <Card.Meta>{a.country}</Card.Meta>\n                </Card.Content>\n                <Card.Content extra>\n                  <Button\n                    color=\"yellow\"\n                    onClick={() => this.handleSelectAddress(a)}\n                  >\n                    Update\n                  </Button>\n                  <Button\n                    color=\"red\"\n                    onClick={() => this.handleDeleteAddress(a.id)}\n                  >\n                    Delete\n                  </Button>\n                </Card.Content>\n              </Card>\n            );\n          })}\n        </Card.Group>\n        {addresses.length > 0 ? <Divider /> : null}\n        {selectedAddress === null ? (\n          <AddressForm\n            activeItem={activeItem}\n            countries={countries}\n            formType={CREATE_FORM}\n            userID={userID}\n            callback={this.handleCallback}\n          />\n        ) : null}\n        {selectedAddress && (\n          <AddressForm\n            activeItem={activeItem}\n            userID={userID}\n            countries={countries}\n            address={selectedAddress}\n            formType={UPDATE_FORM}\n            callback={this.handleCallback}\n          />\n        )}\n      </React.Fragment>\n    );\n  };\n\n  render() {\n    const { activeItem, error, loading } = this.state;\n    const { isAuthenticated } = this.props;\n    if (!isAuthenticated) {\n      return <Redirect to=\"/login\" />;\n    }\n    return (\n      <Grid container columns={2} divided>\n        <Grid.Row columns={1}>\n          <Grid.Column>\n            {error && (\n              <Message\n                error\n                header=\"There was an error\"\n                content={JSON.stringify(error)}\n              />\n            )}\n            {loading && (\n              <Segment>\n                <Dimmer active inverted>\n                  <Loader inverted>Loading</Loader>\n                </Dimmer>\n                <Image src=\"/images/wireframe/short-paragraph.png\" />\n              </Segment>\n            )}\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column width={6}>\n            <Menu pointing vertical fluid>\n              <Menu.Item\n                name=\"Shipping Address\"\n                active={activeItem === \"shippingAddress\"}\n                onClick={() => this.handleItemClick(\"shippingAddress\")}\n              />\n              <Menu.Item\n                name=\"Payment history\"\n                active={activeItem === \"paymentHistory\"}\n                onClick={() => this.handleItemClick(\"paymentHistory\")}\n              />\n            </Menu>\n          </Grid.Column>\n          <Grid.Column width={10}>\n            <Header>{this.handleGetActiveItem()}</Header>\n            <Divider />\n            {activeItem === \"paymentHistory\" ? (\n              <PaymentHistory />\n            ) : (\n              this.renderAddresses()\n            )}\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nexport default connect(mapStateToProps)(Profile);\n"]},"metadata":{},"sourceType":"module"}