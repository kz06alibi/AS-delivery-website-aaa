{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nassi\\\\Desktop\\\\AS delivery\\\\src\\\\containers\\\\ProductDetail.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { Button, Card, Container, Dimmer, Form, Grid, Header, Icon, Image, Item, Label, Loader, Message, Segment, Select, Divider } from \"semantic-ui-react\";\nimport { productDetailURL, addToCartURL } from \"../constants\";\nimport { fetchCart } from \"../store/actions/cart\";\nimport { authAxios } from \"../utils\";\n\nclass ProductDetail extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false,\n      error: null,\n      formVisible: false,\n      data: [],\n      formData: {}\n    };\n\n    this.handleToggleForm = () => {\n      const {\n        formVisible\n      } = this.state;\n      this.setState({\n        formVisible: !formVisible\n      });\n    };\n\n    this.handleFetchItem = () => {\n      const {\n        match: {\n          params\n        }\n      } = this.props;\n      this.setState({\n        loading: true\n      });\n      axios.get(productDetailURL(params.productID)).then(res => {\n        this.setState({\n          data: res.data,\n          loading: false\n        });\n      }).catch(err => {\n        this.setState({\n          error: err,\n          loading: false\n        });\n      });\n    };\n\n    this.handleFormatData = formData => {\n      return Object.keys(formData).map(key => {\n        return formData[key];\n      });\n    };\n\n    this.handleAddToCart = slug => {\n      this.setState({\n        loading: true\n      });\n      const {\n        formData\n      } = this.state;\n      const variations = this.handleFormatData(formData);\n      authAxios.post(addToCartURL, {\n        slug,\n        variations\n      }).then(res => {\n        this.props.refreshCart();\n        this.setState({\n          loading: false\n        });\n      }).catch(err => {\n        this.setState({\n          error: err,\n          loading: false\n        });\n      });\n    };\n\n    this.handleChange = (e, {\n      name,\n      value\n    }) => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormData = { ...formData,\n        [name]: value\n      };\n      this.setState({\n        formData: updatedFormData\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.handleFetchItem();\n  }\n\n  render() {\n    const {\n      data,\n      error,\n      formData,\n      formVisible,\n      loading\n    } = this.state;\n    const item = data;\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, error && /*#__PURE__*/React.createElement(Message, {\n      error: true,\n      header: \"There was some errors with your submission\",\n      content: JSON.stringify(error),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }), loading && /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Dimmer, {\n      active: true,\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, \"Loading\")), /*#__PURE__*/React.createElement(Image, {\n      src: \"/images/wireframe/short-paragraph.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      columns: 2,\n      divided: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      fluid: true,\n      image: item.image,\n      header: item.category,\n      meta: /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 19\n        }\n      }, item.title, \"\\u200E\\u200E\\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E\", /*#__PURE__*/React.createElement(Label, {\n        as: \"a\",\n        color: \"red\",\n        tag: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }\n      }, \" \\u20B8\", item.discount_price)),\n      description: item.description,\n      extra: /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        fluid: true,\n        color: \"yellow\",\n        floated: \"right\",\n        icon: true,\n        labelPosition: \"right\",\n        onClick: this.handleToggleForm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }\n      }, \"Add to cart\", /*#__PURE__*/React.createElement(Icon, {\n        name: \"cart plus\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 23\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }), formVisible && /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: () => this.handleAddToCart(item.slug),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 19\n      }\n    }, data.variations.map(v => {\n      const name = v.name.toLowerCase();\n      return /*#__PURE__*/React.createElement(Form.Field, {\n        key: v.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Select, {\n        name: name,\n        onChange: this.handleChange,\n        placeholder: `Select a ${name}`,\n        fluid: true,\n        selection: true,\n        options: v.item_variations.map(item => {\n          return {\n            key: item.id,\n            text: item.value,\n            value: item.id\n          };\n        }),\n        value: formData[name],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 27\n        }\n      }));\n    }), /*#__PURE__*/React.createElement(Form.Button, {\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    }, \"Add\")))), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 15\n      }\n    }, \"Try different variations\"), data.variations && data.variations.map(v => {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: v.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        as: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 23\n        }\n      }, v.name), /*#__PURE__*/React.createElement(Item.Group, {\n        divided: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 23\n        }\n      }, v.item_variations.map(iv => {\n        return /*#__PURE__*/React.createElement(Item, {\n          key: iv.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 29\n          }\n        }, iv.attachment && /*#__PURE__*/React.createElement(Item.Image, {\n          size: \"tiny\",\n          src: `http://127.0.0.1:8000${iv.attachment}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(Item.Content, {\n          verticalAlign: \"middle\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 31\n          }\n        }, iv.value));\n      })));\n    })))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    refreshCart: () => dispatch(fetchCart())\n  };\n};\n\nexport default withRouter(connect(null, mapDispatchToProps)(ProductDetail));","map":{"version":3,"sources":["C:/Users/nassi/Desktop/AS delivery/src/containers/ProductDetail.js"],"names":["React","withRouter","connect","axios","Button","Card","Container","Dimmer","Form","Grid","Header","Icon","Image","Item","Label","Loader","Message","Segment","Select","Divider","productDetailURL","addToCartURL","fetchCart","authAxios","ProductDetail","Component","state","loading","error","formVisible","data","formData","handleToggleForm","setState","handleFetchItem","match","params","props","get","productID","then","res","catch","err","handleFormatData","Object","keys","map","key","handleAddToCart","slug","variations","post","refreshCart","handleChange","e","name","value","updatedFormData","componentDidMount","render","item","JSON","stringify","image","category","title","discount_price","description","v","toLowerCase","id","item_variations","text","iv","attachment","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,SAHF,EAIEC,MAJF,EAKEC,IALF,EAMEC,IANF,EAOEC,MAPF,EAQEC,IARF,EASEC,KATF,EAUEC,IAVF,EAWEC,KAXF,EAYEC,MAZF,EAaEC,OAbF,EAcEC,OAdF,EAeEC,MAfF,EAgBEC,OAhBF,QAiBO,mBAjBP;AAkBA,SAASC,gBAAT,EAA2BC,YAA3B,QAA+C,cAA/C;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,SAAT,QAA0B,UAA1B;;AAEA,MAAMC,aAAN,SAA4BxB,KAAK,CAACyB,SAAlC,CAA4C;AAAA;AAAA;AAAA,SAC1CC,KAD0C,GAClC;AACNC,MAAAA,OAAO,EAAE,KADH;AAENC,MAAAA,KAAK,EAAE,IAFD;AAGNC,MAAAA,WAAW,EAAE,KAHP;AAINC,MAAAA,IAAI,EAAE,EAJA;AAKNC,MAAAA,QAAQ,EAAE;AALJ,KADkC;;AAAA,SAa1CC,gBAb0C,GAavB,MAAM;AACvB,YAAM;AAAEH,QAAAA;AAAF,UAAkB,KAAKH,KAA7B;AACA,WAAKO,QAAL,CAAc;AACZJ,QAAAA,WAAW,EAAE,CAACA;AADF,OAAd;AAGD,KAlByC;;AAAA,SAoB1CK,eApB0C,GAoBxB,MAAM;AACtB,YAAM;AACJC,QAAAA,KAAK,EAAE;AAAEC,UAAAA;AAAF;AADH,UAEF,KAAKC,KAFT;AAGA,WAAKJ,QAAL,CAAc;AAAEN,QAAAA,OAAO,EAAE;AAAX,OAAd;AACAxB,MAAAA,KAAK,CACFmC,GADH,CACOlB,gBAAgB,CAACgB,MAAM,CAACG,SAAR,CADvB,EAEGC,IAFH,CAEQC,GAAG,IAAI;AACX,aAAKR,QAAL,CAAc;AAAEH,UAAAA,IAAI,EAAEW,GAAG,CAACX,IAAZ;AAAkBH,UAAAA,OAAO,EAAE;AAA3B,SAAd;AACD,OAJH,EAKGe,KALH,CAKSC,GAAG,IAAI;AACZ,aAAKV,QAAL,CAAc;AAAEL,UAAAA,KAAK,EAAEe,GAAT;AAAchB,UAAAA,OAAO,EAAE;AAAvB,SAAd;AACD,OAPH;AAQD,KAjCyC;;AAAA,SAmC1CiB,gBAnC0C,GAmCvBb,QAAQ,IAAI;AAC7B,aAAOc,MAAM,CAACC,IAAP,CAAYf,QAAZ,EAAsBgB,GAAtB,CAA0BC,GAAG,IAAI;AACtC,eAAOjB,QAAQ,CAACiB,GAAD,CAAf;AACD,OAFM,CAAP;AAGD,KAvCyC;;AAAA,SAyC1CC,eAzC0C,GAyCxBC,IAAI,IAAI;AACxB,WAAKjB,QAAL,CAAc;AAAEN,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,YAAM;AAAEI,QAAAA;AAAF,UAAe,KAAKL,KAA1B;AACA,YAAMyB,UAAU,GAAG,KAAKP,gBAAL,CAAsBb,QAAtB,CAAnB;AACAR,MAAAA,SAAS,CACN6B,IADH,CACQ/B,YADR,EACsB;AAAE6B,QAAAA,IAAF;AAAQC,QAAAA;AAAR,OADtB,EAEGX,IAFH,CAEQC,GAAG,IAAI;AACX,aAAKJ,KAAL,CAAWgB,WAAX;AACA,aAAKpB,QAAL,CAAc;AAAEN,UAAAA,OAAO,EAAE;AAAX,SAAd;AACD,OALH,EAMGe,KANH,CAMSC,GAAG,IAAI;AACZ,aAAKV,QAAL,CAAc;AAAEL,UAAAA,KAAK,EAAEe,GAAT;AAAchB,UAAAA,OAAO,EAAE;AAAvB,SAAd;AACD,OARH;AASD,KAtDyC;;AAAA,SAwD1C2B,YAxD0C,GAwD3B,CAACC,CAAD,EAAI;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAJ,KAAwB;AACrC,YAAM;AAAE1B,QAAAA;AAAF,UAAe,KAAKL,KAA1B;AACA,YAAMgC,eAAe,GAAG,EACtB,GAAG3B,QADmB;AAEtB,SAACyB,IAAD,GAAQC;AAFc,OAAxB;AAIA,WAAKxB,QAAL,CAAc;AAAEF,QAAAA,QAAQ,EAAE2B;AAAZ,OAAd;AACD,KA/DyC;AAAA;;AAS1CC,EAAAA,iBAAiB,GAAG;AAClB,SAAKzB,eAAL;AACD;;AAsDD0B,EAAAA,MAAM,GAAG;AACP,UAAM;AAAE9B,MAAAA,IAAF;AAAQF,MAAAA,KAAR;AAAeG,MAAAA,QAAf;AAAyBF,MAAAA,WAAzB;AAAsCF,MAAAA;AAAtC,QAAkD,KAAKD,KAA7D;AACA,UAAMmC,IAAI,GAAG/B,IAAb;AACA,wBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,KAAK,iBACJ,oBAAC,OAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,MAAM,EAAC,4CAFT;AAGE,MAAA,OAAO,EAAEkC,IAAI,CAACC,SAAL,CAAenC,KAAf,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAQGD,OAAO,iBACN,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,MAAM,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,eAIE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,uCAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CATJ,eAgBE,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAE,CAAf;AAAkB,MAAA,OAAO,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,KAAK,EAAEkC,IAAI,CAACG,KAFd;AAGE,MAAA,MAAM,EAAEH,IAAI,CAACI,QAHf;AAIE,MAAA,IAAI,eACF,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGJ,IAAI,CAACK,KADR,oLAGE,oBAAC,KAAD;AAAO,QAAA,EAAE,EAAC,GAAV;AAAc,QAAA,KAAK,EAAC,KAApB;AAA0B,QAAA,GAAG,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiCL,IAAI,CAACM,cAAtC,CAHF,CALJ;AAWE,MAAA,WAAW,EAAEN,IAAI,CAACO,WAXpB;AAYE,MAAA,KAAK,eACH,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,KAAK,EAAC,QAFR;AAGE,QAAA,OAAO,EAAC,OAHV;AAIE,QAAA,IAAI,MAJN;AAKE,QAAA,aAAa,EAAC,OALhB;AAME,QAAA,OAAO,EAAE,KAAKpC,gBANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCASE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CADF,CAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EA6BGH,WAAW,iBACV,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,MAAM,KAAKoB,eAAL,CAAqBY,IAAI,CAACX,IAA1B,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGpB,IAAI,CAACqB,UAAL,CAAgBJ,GAAhB,CAAoBsB,CAAC,IAAI;AACxB,YAAMb,IAAI,GAAGa,CAAC,CAACb,IAAF,CAAOc,WAAP,EAAb;AACA,0BACE,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,GAAG,EAAED,CAAC,CAACE,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAEf,IADR;AAEE,QAAA,QAAQ,EAAE,KAAKF,YAFjB;AAGE,QAAA,WAAW,EAAG,YAAWE,IAAK,EAHhC;AAIE,QAAA,KAAK,MAJP;AAKE,QAAA,SAAS,MALX;AAME,QAAA,OAAO,EAAEa,CAAC,CAACG,eAAF,CAAkBzB,GAAlB,CAAsBc,IAAI,IAAI;AACrC,iBAAO;AACLb,YAAAA,GAAG,EAAEa,IAAI,CAACU,EADL;AAELE,YAAAA,IAAI,EAAEZ,IAAI,CAACJ,KAFN;AAGLA,YAAAA,KAAK,EAAEI,IAAI,CAACU;AAHP,WAAP;AAKD,SANQ,CANX;AAaE,QAAA,KAAK,EAAExC,QAAQ,CAACyB,IAAD,CAbjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAmBD,KArBA,CADH,eAuBE,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,OAAO,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAvBF,CAFF,CA9BJ,CADF,eA6DE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAEG1B,IAAI,CAACqB,UAAL,IACCrB,IAAI,CAACqB,UAAL,CAAgBJ,GAAhB,CAAoBsB,CAAC,IAAI;AACvB,0BACE,oBAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,GAAG,EAAEA,CAAC,CAACE,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiBF,CAAC,CAACb,IAAnB,CADF,eAEE,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,OAAO,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGa,CAAC,CAACG,eAAF,CAAkBzB,GAAlB,CAAsB2B,EAAE,IAAI;AAC3B,4BACE,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEA,EAAE,CAACH,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGG,EAAE,CAACC,UAAH,iBACC,oBAAC,IAAD,CAAM,KAAN;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,GAAG,EAAG,wBAAuBD,EAAE,CAACC,UAAW,EAF7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,eAOE,oBAAC,IAAD,CAAM,OAAN;AAAc,UAAA,aAAa,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGD,EAAE,CAACjB,KADN,CAPF,CADF;AAaD,OAdA,CADH,CAFF,CADF;AAsBD,KAvBD,CAHJ,CA7DF,CADF,CAhBF,CADF;AA+GD;;AAnLyC;;AAsL5C,MAAMmB,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLxB,IAAAA,WAAW,EAAE,MAAMwB,QAAQ,CAACvD,SAAS,EAAV;AADtB,GAAP;AAGD,CAJD;;AAMA,eAAerB,UAAU,CACvBC,OAAO,CACL,IADK,EAEL0E,kBAFK,CAAP,CAGEpD,aAHF,CADuB,CAAzB","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Card,\n  Container,\n  Dimmer,\n  Form,\n  Grid,\n  Header,\n  Icon,\n  Image,\n  Item,\n  Label,\n  Loader,\n  Message,\n  Segment,\n  Select,\n  Divider\n} from \"semantic-ui-react\";\nimport { productDetailURL, addToCartURL } from \"../constants\";\nimport { fetchCart } from \"../store/actions/cart\";\nimport { authAxios } from \"../utils\";\n\nclass ProductDetail extends React.Component {\n  state = {\n    loading: false,\n    error: null,\n    formVisible: false,\n    data: [],\n    formData: {}\n  };\n\n  componentDidMount() {\n    this.handleFetchItem();\n  }\n\n  handleToggleForm = () => {\n    const { formVisible } = this.state;\n    this.setState({\n      formVisible: !formVisible\n    });\n  };\n\n  handleFetchItem = () => {\n    const {\n      match: { params }\n    } = this.props;\n    this.setState({ loading: true });\n    axios\n      .get(productDetailURL(params.productID))\n      .then(res => {\n        this.setState({ data: res.data, loading: false });\n      })\n      .catch(err => {\n        this.setState({ error: err, loading: false });\n      });\n  };\n\n  handleFormatData = formData => {\n    return Object.keys(formData).map(key => {\n      return formData[key];\n    });\n  };\n\n  handleAddToCart = slug => {\n    this.setState({ loading: true });\n    const { formData } = this.state;\n    const variations = this.handleFormatData(formData);\n    authAxios\n      .post(addToCartURL, { slug, variations })\n      .then(res => {\n        this.props.refreshCart();\n        this.setState({ loading: false });\n      })\n      .catch(err => {\n        this.setState({ error: err, loading: false });\n      });\n  };\n\n  handleChange = (e, { name, value }) => {\n    const { formData } = this.state;\n    const updatedFormData = {\n      ...formData,\n      [name]: value\n    };\n    this.setState({ formData: updatedFormData });\n  };\n\n  render() {\n    const { data, error, formData, formVisible, loading } = this.state;\n    const item = data;\n    return (\n      <Container>\n        {error && (\n          <Message\n            error\n            header=\"There was some errors with your submission\"\n            content={JSON.stringify(error)}\n          />\n        )}\n        {loading && (\n          <Segment>\n            <Dimmer active inverted>\n              <Loader inverted>Loading</Loader>\n            </Dimmer>\n            <Image src=\"/images/wireframe/short-paragraph.png\" />\n          </Segment>\n        )}\n        <Grid columns={2} divided>\n          <Grid.Row>\n            <Grid.Column>\n              <Card\n                fluid\n                image={item.image}\n                header={item.category}\n                meta={\n                  <React.Fragment>\n                    {item.title}‎‎‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ \n\n                    <Label as='a' color='red' tag> ₸{item.discount_price}</Label>\n                  </React.Fragment>\n                }\n                description={item.description}\n                extra={\n                  <React.Fragment>\n                    <Button\n                      fluid\n                      color=\"yellow\"\n                      floated=\"right\"\n                      icon\n                      labelPosition=\"right\"\n                      onClick={this.handleToggleForm}\n                    >\n                      Add to cart\n                      <Icon name=\"cart plus\" />\n                    </Button>\n                  </React.Fragment>\n                }\n              />\n              {formVisible && (\n                <React.Fragment>\n                  <Divider />\n                  <Form onSubmit={() => this.handleAddToCart(item.slug)}>\n                    {data.variations.map(v => {\n                      const name = v.name.toLowerCase();\n                      return (\n                        <Form.Field key={v.id}>\n                          <Select\n                            name={name}\n                            onChange={this.handleChange}\n                            placeholder={`Select a ${name}`}\n                            fluid\n                            selection\n                            options={v.item_variations.map(item => {\n                              return {\n                                key: item.id,\n                                text: item.value,\n                                value: item.id\n                              };\n                            })}\n                            value={formData[name]}\n                          />\n                        </Form.Field>\n                      );\n                    })}\n                    <Form.Button primary>Add</Form.Button>\n                  </Form>\n                </React.Fragment>\n              )}\n            </Grid.Column>\n            <Grid.Column>\n              <Header as=\"h2\">Try different variations</Header>\n              {data.variations &&\n                data.variations.map(v => {\n                  return (\n                    <React.Fragment key={v.id}>\n                      <Header as=\"h3\">{v.name}</Header>\n                      <Item.Group divided>\n                        {v.item_variations.map(iv => {\n                          return (\n                            <Item key={iv.id}>\n                              {iv.attachment && (\n                                <Item.Image\n                                  size=\"tiny\"\n                                  src={`http://127.0.0.1:8000${iv.attachment}`}\n                                />\n                              )}\n                              <Item.Content verticalAlign=\"middle\">\n                                {iv.value}\n                              </Item.Content>\n                            </Item>\n                          );\n                        })}\n                      </Item.Group>\n                    </React.Fragment>\n                  );\n                })}\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    refreshCart: () => dispatch(fetchCart())\n  };\n};\n\nexport default withRouter(\n  connect(\n    null,\n    mapDispatchToProps\n  )(ProductDetail)\n);\n"]},"metadata":{},"sourceType":"module"}